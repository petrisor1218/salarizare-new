{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Documente\\\\GitHub\\\\salarizare\\\\modern-backend\\\\frontend\\\\src\\\\components\\\\salaries\\\\SalaryReport.js\",\n  _s = $RefreshSig$();\n// C:\\Users\\Administrator\\OneDrive\\Documente\\GitHub\\salarizare\\modern-backend\\frontend\\src\\components\\salaries\\SalaryReport.js\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport FormInput from '../shared/forms/FormInput';\nimport Select from '../shared/forms/Select';\nimport Button from '../shared/buttons/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalaryReport = () => {\n  _s();\n  const [report, setReport] = useState(null);\n  const [filters, setFilters] = useState({\n    year: new Date().getFullYear(),\n    month: new Date().getMonth() + 1,\n    driverId: ''\n  });\n  const generateReport = async () => {\n    const response = await api.get('/reports/salaries', {\n      params: filters\n    });\n    setReport(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        label: \"An\",\n        value: filters.year,\n        onChange: e => setFilters({\n          ...filters,\n          year: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Luna\",\n        value: filters.month,\n        onChange: e => setFilters({\n          ...filters,\n          month: e.target.value\n        }),\n        options: [{\n          value: 1,\n          label: 'Ianuarie'\n        }, {\n          value: 2,\n          label: 'Februarie'\n        }, {\n          value: 3,\n          label: 'Martie'\n        }, {\n          value: 4,\n          label: 'Aprilie'\n        }, {\n          value: 5,\n          label: 'Mai'\n        }, {\n          value: 6,\n          label: 'Iunie'\n        }, {\n          value: 7,\n          label: 'Iulie'\n        }, {\n          value: 8,\n          label: 'August'\n        }, {\n          value: 9,\n          label: 'Septembrie'\n        }, {\n          value: 10,\n          label: 'Octombrie'\n        }, {\n          value: 11,\n          label: 'Noiembrie'\n        }, {\n          value: 12,\n          label: 'Decembrie'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: generateReport,\n        children: \"Genereaz\\u0103 Raport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium mb-4\",\n        children: \"Raport Salarii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0218ofer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Salariu Baz\\u0103\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Diurn\\u0103\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bonusuri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Deduceri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: report.entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.sofer.nume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [entry.salariuBaza, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [entry.diurna, \" EUR\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [entry.totalBonusuri, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [entry.totalDeduceri, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [entry.total, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 40\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 8\n  }, this);\n};\n_s(SalaryReport, \"z9dKodje2oUS6PL5eoUucU5SoUA=\");\n_c = SalaryReport;\nexport default SalaryReport;\nvar _c;\n$RefreshReg$(_c, \"SalaryReport\");","map":{"version":3,"names":["React","useState","api","FormInput","Select","Button","jsxDEV","_jsxDEV","SalaryReport","_s","report","setReport","filters","setFilters","year","Date","getFullYear","month","getMonth","driverId","generateReport","response","get","params","data","className","children","type","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","options","onClick","entries","map","entry","index","sofer","nume","salariuBaza","diurna","totalBonusuri","totalDeduceri","total","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/components/salaries/SalaryReport.js"],"sourcesContent":["// C:\\Users\\Administrator\\OneDrive\\Documente\\GitHub\\salarizare\\modern-backend\\frontend\\src\\components\\salaries\\SalaryReport.js\r\nimport React, { useState } from 'react';\r\nimport api from '../../services/api';\r\nimport FormInput from '../shared/forms/FormInput';\r\nimport Select from '../shared/forms/Select';\r\nimport Button from '../shared/buttons/Button';\r\n\r\nconst SalaryReport = () => {\r\n   const [report, setReport] = useState(null);\r\n   const [filters, setFilters] = useState({\r\n       year: new Date().getFullYear(),\r\n       month: new Date().getMonth() + 1,\r\n       driverId: ''\r\n   });\r\n\r\n   const generateReport = async () => {\r\n       const response = await api.get('/reports/salaries', { params: filters });\r\n       setReport(response.data);\r\n   };\r\n\r\n   return (\r\n       <div className=\"space-y-6\">\r\n           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n               <FormInput\r\n                   type=\"number\"\r\n                   label=\"An\"\r\n                   value={filters.year}\r\n                   onChange={e => setFilters({...filters, year: e.target.value})}\r\n               />\r\n               <Select\r\n                   label=\"Luna\"\r\n                   value={filters.month}\r\n                   onChange={e => setFilters({...filters, month: e.target.value})}\r\n                   options={[\r\n                       { value: 1, label: 'Ianuarie' },\r\n                       { value: 2, label: 'Februarie' },\r\n                       { value: 3, label: 'Martie' },\r\n                       { value: 4, label: 'Aprilie' },\r\n                       { value: 5, label: 'Mai' },\r\n                       { value: 6, label: 'Iunie' },\r\n                       { value: 7, label: 'Iulie' },\r\n                       { value: 8, label: 'August' },\r\n                       { value: 9, label: 'Septembrie' },\r\n                       { value: 10, label: 'Octombrie' },\r\n                       { value: 11, label: 'Noiembrie' },\r\n                       { value: 12, label: 'Decembrie' }\r\n                   ]}\r\n               />\r\n               <Button onClick={generateReport}>Generează Raport</Button>\r\n           </div>\r\n\r\n           {report && (\r\n               <div className=\"mt-6\">\r\n                   <h3 className=\"text-lg font-medium mb-4\">Raport Salarii</h3>\r\n                   <div className=\"overflow-x-auto\">\r\n                       <table className=\"min-w-full divide-y divide-gray-200\">\r\n                           <thead>\r\n                               <tr>\r\n                                   <th>Șofer</th>\r\n                                   <th>Salariu Bază</th>\r\n                                   <th>Diurnă</th>\r\n                                   <th>Bonusuri</th>\r\n                                   <th>Deduceri</th>\r\n                                   <th>Total</th>\r\n                               </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                               {report.entries.map((entry, index) => (\r\n                                   <tr key={index}>\r\n                                       <td>{entry.sofer.nume}</td>\r\n                                       <td>{entry.salariuBaza} RON</td>\r\n                                       <td>{entry.diurna} EUR</td>\r\n                                       <td>{entry.totalBonusuri} RON</td>\r\n                                       <td>{entry.totalDeduceri} RON</td>\r\n                                       <td>{entry.total} RON</td>\r\n                                   </tr>\r\n                               ))}\r\n                           </tbody>\r\n                       </table>\r\n                   </div>\r\n               </div>\r\n           )}\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default SalaryReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}