{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (window.location.pathname !== '/login') {\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nconst authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\nconst driversAPI = {\n  getAll: () => api.get('/drivers'),\n  getById: id => api.get(`/drivers/${id}`),\n  create: data => api.post('/drivers', data),\n  update: (id, data) => api.patch(`/drivers/${id}`, data),\n  delete: id => api.delete(`/drivers/${id}`)\n};\nconst vehiclesAPI = {\n  getAll: () => api.get('/vehicles'),\n  getById: id => api.get(`/vehicles/${id}`),\n  create: data => api.post('/vehicles', data),\n  update: (id, data) => api.patch(`/vehicles/${id}`, data),\n  delete: id => api.delete(`/vehicles/${id}`)\n};\nexport { api as default, authAPI, driversAPI, vehiclesAPI };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","status","removeItem","window","location","pathname","authAPI","login","credentials","post","getCurrentUser","get","driversAPI","getAll","getById","id","data","update","patch","delete","vehiclesAPI","default"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        console.error('Request error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            if (window.location.pathname !== '/login') {\r\n                window.location = '/login';\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// API methods\r\nconst authAPI = {\r\n    login: (credentials) => api.post('/auth/login', credentials),\r\n    getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\nconst driversAPI = {\r\n    getAll: () => api.get('/drivers'),\r\n    getById: (id) => api.get(`/drivers/${id}`),\r\n    create: (data) => api.post('/drivers', data),\r\n    update: (id, data) => api.patch(`/drivers/${id}`, data),\r\n    delete: (id) => api.delete(`/drivers/${id}`)\r\n};\r\n\r\nconst vehiclesAPI = {\r\n    getAll: () => api.get('/vehicles'),\r\n    getById: (id) => api.get(`/vehicles/${id}`),\r\n    create: (data) => api.post('/vehicles', data),\r\n    update: (id, data) => api.patch(`/vehicles/${id}`, data),\r\n    delete: (id) => api.delete(`/vehicles/${id}`)\r\n};\r\n\r\nexport { api as default, authAPI, driversAPI, vehiclesAPI };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}