{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (window.location.pathname !== '/login') {\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nconst authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\nconst driversAPI = {\n  getAll: params => api.get('/drivers', {\n    params\n  }),\n  getById: id => api.get(`/drivers/${id}`),\n  create: data => api.post('/drivers', data),\n  update: (id, data) => api.patch(`/drivers/${id}`, data),\n  delete: id => api.delete(`/drivers/${id}`),\n  getPerioade: (id, params) => api.get(`/drivers/${id}/perioade`, {\n    params\n  }),\n  addPerioada: (id, data) => api.post(`/drivers/${id}/perioade`, data),\n  updatePerioada: (id, perioadaId, data) => api.patch(`/drivers/${id}/perioade/${perioadaId}`, data),\n  deletePerioada: (id, perioadaId) => api.delete(`/drivers/${id}/perioade/${perioadaId}`),\n  getSalariu: (id, params) => api.get(`/drivers/${id}/salariu`, {\n    params\n  }),\n  updateSalariu: (id, data) => api.patch(`/drivers/${id}/salariu`, data),\n  getDocuments: id => api.get(`/drivers/${id}/documents`),\n  uploadDocument: (id, data) => api.post(`/drivers/${id}/documents/upload`, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  updateDocuments: (id, data) => api.patch(`/drivers/${id}/documents`, data),\n  getStatusHistory: id => api.get(`/drivers/${id}/status-history`),\n  updateStatus: (id, status) => api.patch(`/drivers/${id}/status`, {\n    status\n  })\n};\nconst dashboardAPI = {\n  getStats: () => api.get('/dashboard/stats'),\n  getActivity: () => api.get('/dashboard/activity'),\n  getExpiringDocuments: () => api.get('/dashboard/documents/expiring'),\n  getDriverStatus: () => api.get('/dashboard/drivers/status')\n};\nconst salariesAPI = {\n  getAll: filters => api.get('/salaries', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/salaries/sofer/${soferId}`),\n  create: data => api.post('/salaries', data),\n  update: (id, data) => api.patch(`/salaries/${id}`, data),\n  addBonus: (id, data) => api.post(`/salaries/${id}/bonus`, data),\n  addDeducere: (id, data) => api.post(`/salaries/${id}/deducere`, data),\n  calculate: id => api.post(`/salaries/${id}/calculeaza`)\n};\nconst holidaysAPI = {\n  getAll: params => api.get('/holidays', {\n    params\n  }),\n  getByDriver: (driverId, params) => api.get(`/holidays/driver/${driverId}`, {\n    params\n  }),\n  create: data => api.post('/holidays', data),\n  update: (id, data) => api.patch(`/holidays/${id}`, data),\n  delete: id => api.delete(`/holidays/${id}`)\n};\nconst finesAPI = {\n  getAll: filters => api.get('/fines', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/fines/sofer/${soferId}`),\n  create: data => api.post('/fines', data),\n  update: (id, data) => api.patch(`/fines/${id}`, data),\n  addPayment: (id, data) => api.post(`/fines/${id}/plati`, data),\n  addContestation: (id, data) => api.post(`/fines/${id}/contestatie`, data)\n};\nexport { api as default, authAPI, driversAPI, dashboardAPI, salariesAPI, holidaysAPI, finesAPI };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","status","removeItem","window","location","pathname","authAPI","login","credentials","post","getCurrentUser","get","driversAPI","getAll","params","getById","id","data","update","patch","delete","getPerioade","addPerioada","updatePerioada","perioadaId","deletePerioada","getSalariu","updateSalariu","getDocuments","uploadDocument","updateDocuments","getStatusHistory","updateStatus","dashboardAPI","getStats","getActivity","getExpiringDocuments","getDriverStatus","salariesAPI","filters","getByDriver","soferId","addBonus","addDeducere","calculate","holidaysAPI","driverId","finesAPI","addPayment","addContestation","default"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        console.error('Request error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            if (window.location.pathname !== '/login') {\r\n                window.location = '/login';\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// API methods\r\nconst authAPI = {\r\n    login: (credentials) => api.post('/auth/login', credentials),\r\n    getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\nconst driversAPI = {\r\n    getAll: (params) => api.get('/drivers', { params }),\r\n    getById: (id) => api.get(`/drivers/${id}`),\r\n    create: (data) => api.post('/drivers', data),\r\n    update: (id, data) => api.patch(`/drivers/${id}`, data),\r\n    delete: (id) => api.delete(`/drivers/${id}`),\r\n    getPerioade: (id, params) => api.get(`/drivers/${id}/perioade`, { params }),\r\n    addPerioada: (id, data) => api.post(`/drivers/${id}/perioade`, data),\r\n    updatePerioada: (id, perioadaId, data) => api.patch(`/drivers/${id}/perioade/${perioadaId}`, data),\r\n    deletePerioada: (id, perioadaId) => api.delete(`/drivers/${id}/perioade/${perioadaId}`),\r\n    getSalariu: (id, params) => api.get(`/drivers/${id}/salariu`, { params }),\r\n    updateSalariu: (id, data) => api.patch(`/drivers/${id}/salariu`, data),\r\n    getDocuments: (id) => api.get(`/drivers/${id}/documents`),\r\n    uploadDocument: (id, data) => api.post(`/drivers/${id}/documents/upload`, data, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }),\r\n    updateDocuments: (id, data) => api.patch(`/drivers/${id}/documents`, data),\r\n    getStatusHistory: (id) => api.get(`/drivers/${id}/status-history`),\r\n    updateStatus: (id, status) => api.patch(`/drivers/${id}/status`, { status })\r\n};\r\n\r\nconst dashboardAPI = {\r\n    getStats: () => api.get('/dashboard/stats'),\r\n    getActivity: () => api.get('/dashboard/activity'),\r\n    getExpiringDocuments: () => api.get('/dashboard/documents/expiring'),\r\n    getDriverStatus: () => api.get('/dashboard/drivers/status')\r\n};\r\n\r\nconst salariesAPI = {\r\n    getAll: (filters) => api.get('/salaries', { params: filters }),\r\n    getByDriver: (soferId) => api.get(`/salaries/sofer/${soferId}`),\r\n    create: (data) => api.post('/salaries', data),\r\n    update: (id, data) => api.patch(`/salaries/${id}`, data),\r\n    addBonus: (id, data) => api.post(`/salaries/${id}/bonus`, data),\r\n    addDeducere: (id, data) => api.post(`/salaries/${id}/deducere`, data),\r\n    calculate: (id) => api.post(`/salaries/${id}/calculeaza`)\r\n};\r\n\r\nconst holidaysAPI = {\r\n    getAll: (params) => api.get('/holidays', { params }),\r\n    getByDriver: (driverId, params) => api.get(`/holidays/driver/${driverId}`, { params }),\r\n    create: (data) => api.post('/holidays', data),\r\n    update: (id, data) => api.patch(`/holidays/${id}`, data),\r\n    delete: (id) => api.delete(`/holidays/${id}`)\r\n};\r\n\r\nconst finesAPI = {\r\n    getAll: (filters) => api.get('/fines', { params: filters }),\r\n    getByDriver: (soferId) => api.get(`/fines/sofer/${soferId}`),\r\n    create: (data) => api.post('/fines', data),\r\n    update: (id, data) => api.patch(`/fines/${id}`, data),\r\n    addPayment: (id, data) => api.post(`/fines/${id}/plati`, data),\r\n    addContestation: (id, data) => api.post(`/fines/${id}/contestatie`, data)\r\n};\r\n\r\nexport { \r\n    api as default, \r\n    authAPI, \r\n    driversAPI, \r\n    dashboardAPI,\r\n    salariesAPI,\r\n    holidaysAPI,\r\n    finesAPI \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}