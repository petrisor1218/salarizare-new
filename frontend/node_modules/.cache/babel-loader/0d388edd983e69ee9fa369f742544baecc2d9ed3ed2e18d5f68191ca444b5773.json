{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Documente\\\\GitHub\\\\salarizare\\\\modern-backend\\\\frontend\\\\src\\\\components\\\\salaries\\\\SalaryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { driversAPI, salariesAPI } from '../../services/api';\nimport { formatDate, calculateDays } from '../../utils/dateUtils';\nimport FormInput from '../shared/forms/FormInput';\nimport Select from '../shared/forms/Select';\nimport Button from '../shared/buttons/Button';\nimport DeducereModal from './modals/DeducereModal';\nimport AvansModal from './modals/AvansModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SalaryCalculator = () => {\n  _s();\n  const [drivers, setDrivers] = useState([]);\n  const [selectedDriver, setSelectedDriver] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [salaryData, setSalaryData] = useState({\n    salariuBaza: 0,\n    diurna: {\n      zile: 0,\n      suma: 0,\n      perioade: []\n    },\n    bonusuri: [],\n    deduceri: [],\n    avansuri: [],\n    totalDeduceri: 0,\n    totalAvansuri: 0,\n    totalBonusuri: 0,\n    totalPlataRON: 0,\n    totalPlataEUR: 0\n  });\n  const [isDeducereModalOpen, setIsDeducereModalOpen] = useState(false);\n  const [isAvansModalOpen, setIsAvansModalOpen] = useState(false);\n  useEffect(() => {\n    loadDrivers();\n  }, []);\n  useEffect(() => {\n    if (selectedDriver) {\n      calculateSalary();\n    }\n  }, [selectedDriver, selectedMonth, selectedYear]);\n  const loadDrivers = async () => {\n    try {\n      const response = await driversAPI.getAll();\n      setDrivers(response.data);\n    } catch (error) {\n      console.error('Error loading drivers:', error);\n      setError('Eroare la încărcarea șoferilor');\n    }\n  };\n  const calculateSalary = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // 1. Încarcă datele șoferului\n      const driverResponse = await driversAPI.getById(selectedDriver);\n      const driver = driverResponse.data;\n\n      // 2. Determină perioada de calcul\n      const startDate = new Date(selectedYear, selectedMonth - 1, 1);\n      const endDate = new Date(selectedYear, selectedMonth, 0);\n      let effectiveEndDate = endDate;\n\n      // Ajustează perioada pentru șoferii inactivi\n      if (!driver.activ && driver.dataIncheiereContract) {\n        const contractEndDate = new Date(driver.dataIncheiereContract);\n        if (contractEndDate < endDate) {\n          effectiveEndDate = contractEndDate;\n        }\n      }\n\n      // 3. Încarcă perioadele pentru diurnă\n      const perioadeResponse = await driversAPI.getPerioade(selectedDriver, {\n        dataStart: startDate.toISOString(),\n        dataFinal: effectiveEndDate.toISOString()\n      });\n\n      // 4. Calculează diurna\n      const perioade = perioadeResponse.data.filter(p => p.status === 'Plecat');\n      const zileDiurna = perioade.reduce((total, perioada) => {\n        return total + calculateDays(perioada.dataStart, perioada.dataFinal);\n      }, 0);\n      const sumaDiurna = zileDiurna * (driver.diurnaZi || 70);\n\n      // 5. Încarcă/creează salariul pentru luna curentă\n      let salary = await loadOrCreateSalary(driver, startDate);\n\n      // 6. Calculează totalurile\n      const totalDeduceri = salary.deduceri.reduce((sum, d) => sum + d.suma, 0);\n      const totalAvansuri = salary.avansuri.reduce((sum, a) => sum + a.suma, 0);\n      const totalBonusuri = salary.bonusuri.reduce((sum, b) => sum + b.suma, 0);\n\n      // 7. Calculează salariul final\n      const salariuBazaAjustat = driver.activ ? driver.salariuBaza : calculateProRataSalary(driver.salariuBaza, startDate, effectiveEndDate);\n      const totalPlataRON = salariuBazaAjustat + totalBonusuri - totalDeduceri - totalAvansuri;\n\n      // 8. Actualizează state-ul\n      setSalaryData({\n        salariuBaza: salariuBazaAjustat,\n        diurna: {\n          zile: zileDiurna,\n          suma: sumaDiurna,\n          perioade\n        },\n        bonusuri: salary.bonusuri,\n        deduceri: salary.deduceri,\n        avansuri: salary.avansuri,\n        totalDeduceri,\n        totalAvansuri,\n        totalBonusuri,\n        totalPlataRON,\n        totalPlataEUR: sumaDiurna\n      });\n\n      // 9. Actualizează salariul în baza de date\n      await salariesAPI.update(salary._id, {\n        salariuBaza: salariuBazaAjustat,\n        diurna: sumaDiurna,\n        zileLucrate: zileDiurna,\n        totalPlataRON,\n        totalPlataEUR: sumaDiurna\n      });\n    } catch (error) {\n      console.error('Error calculating salary:', error);\n      setError('Eroare la calculul salariului');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadOrCreateSalary = async (driver, startDate) => {\n    const salariesResponse = await salariesAPI.getByDriver(selectedDriver);\n    let salary = salariesResponse.data.find(s => new Date(s.luna).getMonth() === startDate.getMonth() && new Date(s.luna).getFullYear() === startDate.getFullYear());\n    if (!salary) {\n      const newSalaryResponse = await salariesAPI.create({\n        sofer: selectedDriver,\n        luna: startDate,\n        salariuBaza: driver.salariuBaza,\n        status: 'Draft'\n      });\n      salary = newSalaryResponse.data;\n    }\n    return salary;\n  };\n  const calculateProRataSalary = (salariuBaza, startDate, endDate) => {\n    const totalDays = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0).getDate();\n    const workedDays = Math.min(endDate.getDate(), totalDays);\n    return Math.round(salariuBaza / totalDays * workedDays);\n  };\n  const handleAddDeducere = async deducereData => {\n    try {\n      await salariesAPI.addDeducere(selectedDriver, {\n        ...deducereData,\n        luna: new Date(selectedYear, selectedMonth - 1)\n      });\n      await calculateSalary();\n      setIsDeducereModalOpen(false);\n    } catch (error) {\n      console.error('Error adding deducere:', error);\n      setError('Eroare la adăugarea deducerii');\n    }\n  };\n  const handleAddAvans = async avansData => {\n    try {\n      await salariesAPI.addAvans(selectedDriver, {\n        ...avansData,\n        luna: new Date(selectedYear, selectedMonth - 1)\n      });\n      await calculateSalary();\n      setIsAvansModalOpen(false);\n    } catch (error) {\n      console.error('Error adding avans:', error);\n      setError('Eroare la adăugarea avansului');\n    }\n  };\n  const handleFinalizeSalary = async () => {\n    try {\n      await salariesAPI.finalize(selectedDriver, {\n        luna: new Date(selectedYear, selectedMonth - 1)\n      });\n      await calculateSalary();\n    } catch (error) {\n      console.error('Error finalizing salary:', error);\n      setError('Eroare la finalizarea salariului');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          label: \"\\u0218ofer\",\n          value: selectedDriver,\n          onChange: e => setSelectedDriver(e.target.value),\n          options: drivers.map(d => ({\n            value: d._id,\n            label: `${d.nume} ${!d.activ ? '(Inactiv)' : ''}`\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Luna\",\n          value: selectedMonth,\n          onChange: e => setSelectedMonth(parseInt(e.target.value)),\n          options: [{\n            value: 1,\n            label: \"Ianuarie\"\n          }, {\n            value: 2,\n            label: \"Februarie\"\n          }, {\n            value: 3,\n            label: \"Martie\"\n          }, {\n            value: 4,\n            label: \"Aprilie\"\n          }, {\n            value: 5,\n            label: \"Mai\"\n          }, {\n            value: 6,\n            label: \"Iunie\"\n          }, {\n            value: 7,\n            label: \"Iulie\"\n          }, {\n            value: 8,\n            label: \"August\"\n          }, {\n            value: 9,\n            label: \"Septembrie\"\n          }, {\n            value: 10,\n            label: \"Octombrie\"\n          }, {\n            value: 11,\n            label: \"Noiembrie\"\n          }, {\n            value: 12,\n            label: \"Decembrie\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"number\",\n          label: \"An\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(parseInt(e.target.value)),\n          min: 2000,\n          max: 2100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border-l-4 border-red-400 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"Se calculeaz\\u0103...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this) : selectedDriver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Salariu Baz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold\",\n            children: [salaryData.salariuBaza, \" RON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Diurn\\u0103 (\", salaryData.diurna.zile, \" zile)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold\",\n            children: [salaryData.diurna.suma, \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Total de Plat\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-green-600\",\n            children: [salaryData.totalPlataRON, \" RON + \", salaryData.totalPlataEUR, \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Perioade Diurn\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), salaryData.diurna.perioade.map((perioada, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between border-b py-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium\",\n              children: [formatDate(perioada.dataStart), \" - \", formatDate(perioada.dataFinal)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [calculateDays(perioada.dataStart, perioada.dataFinal), \" zile - \", perioada.zonaCurse]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: [calculateDays(perioada.dataStart, perioada.dataFinal) * (perioada.diurnaZi || 70), \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Deduceri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsDeducereModalOpen(true),\n              children: \"Adaug\\u0103 Deducere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), salaryData.deduceri.map((deducere, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between border-b py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: deducere.tip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: deducere.descriere\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium text-red-600\",\n              children: [\"-\", deducere.suma, \" RON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 pt-2 border-t\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: \"Total Deduceri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium text-red-600\",\n                children: [\"-\", salaryData.totalDeduceri, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Avansuri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsAvansModalOpen(true),\n              children: \"Adaug\\u0103 Avans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this), salaryData.avansuri.map((avans, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between border-b py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: [\"Avans din \", formatDate(avans.data)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: avans.descriere\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium text-blue-600\",\n              children: [\"-\", avans.suma, \" RON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 pt-2 border-t\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: \"Total Avansuri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium text-blue-600\",\n                children: [\"-\", salaryData.totalAvansuri, \" RON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleFinalizeSalary,\n          children: \"Finalizeaz\\u0103 Calcul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeducereModal, {\n        isOpen: isDeducereModalOpen,\n        onClose: () => setIsDeducereModalOpen(false),\n        onSubmit: handleAddDeducere\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AvansModal, {\n        isOpen: isAvansModalOpen,\n        onClose: () => setIsAvansModalOpen(false),\n        onSubmit: handleAddAvans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n_s(SalaryCalculator, \"oK0oEJcWRc2kgh5QecVcc/3QGOk=\");\n_c = SalaryCalculator;\nexport default SalaryCalculator;\nvar _c;\n$RefreshReg$(_c, \"SalaryCalculator\");","map":{"version":3,"names":["React","useState","useEffect","driversAPI","salariesAPI","formatDate","calculateDays","FormInput","Select","Button","DeducereModal","AvansModal","jsxDEV","_jsxDEV","Fragment","_Fragment","SalaryCalculator","_s","drivers","setDrivers","selectedDriver","setSelectedDriver","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","loading","setLoading","error","setError","salaryData","setSalaryData","salariuBaza","diurna","zile","suma","perioade","bonusuri","deduceri","avansuri","totalDeduceri","totalAvansuri","totalBonusuri","totalPlataRON","totalPlataEUR","isDeducereModalOpen","setIsDeducereModalOpen","isAvansModalOpen","setIsAvansModalOpen","loadDrivers","calculateSalary","response","getAll","data","console","driverResponse","getById","driver","startDate","endDate","effectiveEndDate","activ","dataIncheiereContract","contractEndDate","perioadeResponse","getPerioade","dataStart","toISOString","dataFinal","filter","p","status","zileDiurna","reduce","total","perioada","sumaDiurna","diurnaZi","salary","loadOrCreateSalary","sum","d","a","b","salariuBazaAjustat","calculateProRataSalary","update","_id","zileLucrate","salariesResponse","getByDriver","find","s","luna","newSalaryResponse","create","sofer","totalDays","getDate","workedDays","Math","min","round","handleAddDeducere","deducereData","addDeducere","handleAddAvans","avansData","addAvans","handleFinalizeSalary","finalize","className","children","label","value","onChange","e","target","options","map","nume","fileName","_jsxFileName","lineNumber","columnNumber","parseInt","type","max","index","zonaCurse","variant","onClick","deducere","tip","descriere","avans","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/components/salaries/SalaryCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { driversAPI, salariesAPI } from '../../services/api';\r\nimport { formatDate, calculateDays } from '../../utils/dateUtils';\r\nimport FormInput from '../shared/forms/FormInput';\r\nimport Select from '../shared/forms/Select';\r\nimport Button from '../shared/buttons/Button';\r\nimport DeducereModal from './modals/DeducereModal';\r\nimport AvansModal from './modals/AvansModal';\r\n\r\nconst SalaryCalculator = () => {\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [selectedDriver, setSelectedDriver] = useState('');\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [salaryData, setSalaryData] = useState({\r\n        salariuBaza: 0,\r\n        diurna: {\r\n            zile: 0,\r\n            suma: 0,\r\n            perioade: []\r\n        },\r\n        bonusuri: [],\r\n        deduceri: [],\r\n        avansuri: [],\r\n        totalDeduceri: 0,\r\n        totalAvansuri: 0,\r\n        totalBonusuri: 0,\r\n        totalPlataRON: 0,\r\n        totalPlataEUR: 0\r\n    });\r\n\r\n    const [isDeducereModalOpen, setIsDeducereModalOpen] = useState(false);\r\n    const [isAvansModalOpen, setIsAvansModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadDrivers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedDriver) {\r\n            calculateSalary();\r\n        }\r\n    }, [selectedDriver, selectedMonth, selectedYear]);\r\n\r\n    const loadDrivers = async () => {\r\n        try {\r\n            const response = await driversAPI.getAll();\r\n            setDrivers(response.data);\r\n        } catch (error) {\r\n            console.error('Error loading drivers:', error);\r\n            setError('Eroare la încărcarea șoferilor');\r\n        }\r\n    };\r\n\r\n    const calculateSalary = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            // 1. Încarcă datele șoferului\r\n            const driverResponse = await driversAPI.getById(selectedDriver);\r\n            const driver = driverResponse.data;\r\n\r\n            // 2. Determină perioada de calcul\r\n            const startDate = new Date(selectedYear, selectedMonth - 1, 1);\r\n            const endDate = new Date(selectedYear, selectedMonth, 0);\r\n            let effectiveEndDate = endDate;\r\n\r\n            // Ajustează perioada pentru șoferii inactivi\r\n            if (!driver.activ && driver.dataIncheiereContract) {\r\n                const contractEndDate = new Date(driver.dataIncheiereContract);\r\n                if (contractEndDate < endDate) {\r\n                    effectiveEndDate = contractEndDate;\r\n                }\r\n            }\r\n\r\n            // 3. Încarcă perioadele pentru diurnă\r\n            const perioadeResponse = await driversAPI.getPerioade(selectedDriver, {\r\n                dataStart: startDate.toISOString(),\r\n                dataFinal: effectiveEndDate.toISOString()\r\n            });\r\n\r\n            // 4. Calculează diurna\r\n            const perioade = perioadeResponse.data.filter(p => p.status === 'Plecat');\r\n            const zileDiurna = perioade.reduce((total, perioada) => {\r\n                return total + calculateDays(perioada.dataStart, perioada.dataFinal);\r\n            }, 0);\r\n            const sumaDiurna = zileDiurna * (driver.diurnaZi || 70);\r\n\r\n            // 5. Încarcă/creează salariul pentru luna curentă\r\n            let salary = await loadOrCreateSalary(driver, startDate);\r\n\r\n            // 6. Calculează totalurile\r\n            const totalDeduceri = salary.deduceri.reduce((sum, d) => sum + d.suma, 0);\r\n            const totalAvansuri = salary.avansuri.reduce((sum, a) => sum + a.suma, 0);\r\n            const totalBonusuri = salary.bonusuri.reduce((sum, b) => sum + b.suma, 0);\r\n\r\n            // 7. Calculează salariul final\r\n            const salariuBazaAjustat = driver.activ ? \r\n                driver.salariuBaza : \r\n                calculateProRataSalary(driver.salariuBaza, startDate, effectiveEndDate);\r\n\r\n            const totalPlataRON = salariuBazaAjustat + totalBonusuri - totalDeduceri - totalAvansuri;\r\n\r\n            // 8. Actualizează state-ul\r\n            setSalaryData({\r\n                salariuBaza: salariuBazaAjustat,\r\n                diurna: {\r\n                    zile: zileDiurna,\r\n                    suma: sumaDiurna,\r\n                    perioade\r\n                },\r\n                bonusuri: salary.bonusuri,\r\n                deduceri: salary.deduceri,\r\n                avansuri: salary.avansuri,\r\n                totalDeduceri,\r\n                totalAvansuri,\r\n                totalBonusuri,\r\n                totalPlataRON,\r\n                totalPlataEUR: sumaDiurna\r\n            });\r\n\r\n            // 9. Actualizează salariul în baza de date\r\n            await salariesAPI.update(salary._id, {\r\n                salariuBaza: salariuBazaAjustat,\r\n                diurna: sumaDiurna,\r\n                zileLucrate: zileDiurna,\r\n                totalPlataRON,\r\n                totalPlataEUR: sumaDiurna\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error calculating salary:', error);\r\n            setError('Eroare la calculul salariului');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const loadOrCreateSalary = async (driver, startDate) => {\r\n        const salariesResponse = await salariesAPI.getByDriver(selectedDriver);\r\n        let salary = salariesResponse.data.find(s => \r\n            new Date(s.luna).getMonth() === startDate.getMonth() &&\r\n            new Date(s.luna).getFullYear() === startDate.getFullYear()\r\n        );\r\n\r\n        if (!salary) {\r\n            const newSalaryResponse = await salariesAPI.create({\r\n                sofer: selectedDriver,\r\n                luna: startDate,\r\n                salariuBaza: driver.salariuBaza,\r\n                status: 'Draft'\r\n            });\r\n            salary = newSalaryResponse.data;\r\n        }\r\n\r\n        return salary;\r\n    };\r\n\r\n    const calculateProRataSalary = (salariuBaza, startDate, endDate) => {\r\n        const totalDays = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0).getDate();\r\n        const workedDays = Math.min(endDate.getDate(), totalDays);\r\n        return Math.round((salariuBaza / totalDays) * workedDays);\r\n    };\r\n\r\n    const handleAddDeducere = async (deducereData) => {\r\n        try {\r\n            await salariesAPI.addDeducere(selectedDriver, {\r\n                ...deducereData,\r\n                luna: new Date(selectedYear, selectedMonth - 1)\r\n            });\r\n            await calculateSalary();\r\n            setIsDeducereModalOpen(false);\r\n        } catch (error) {\r\n            console.error('Error adding deducere:', error);\r\n            setError('Eroare la adăugarea deducerii');\r\n        }\r\n    };\r\n\r\n    const handleAddAvans = async (avansData) => {\r\n        try {\r\n            await salariesAPI.addAvans(selectedDriver, {\r\n                ...avansData,\r\n                luna: new Date(selectedYear, selectedMonth - 1)\r\n            });\r\n            await calculateSalary();\r\n            setIsAvansModalOpen(false);\r\n        } catch (error) {\r\n            console.error('Error adding avans:', error);\r\n            setError('Eroare la adăugarea avansului');\r\n        }\r\n    };\r\n\r\n    const handleFinalizeSalary = async () => {\r\n        try {\r\n            await salariesAPI.finalize(selectedDriver, {\r\n                luna: new Date(selectedYear, selectedMonth - 1)\r\n            });\r\n            await calculateSalary();\r\n        } catch (error) {\r\n            console.error('Error finalizing salary:', error);\r\n            setError('Eroare la finalizarea salariului');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Controale selecție */}\r\n            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <Select\r\n                        label=\"Șofer\"\r\n                        value={selectedDriver}\r\n                        onChange={(e) => setSelectedDriver(e.target.value)}\r\n                        options={drivers.map(d => ({\r\n                            value: d._id,\r\n                            label: `${d.nume} ${!d.activ ? '(Inactiv)' : ''}`\r\n                        }))}\r\n                    />\r\n                    \r\n                    <Select\r\n                        label=\"Luna\"\r\n                        value={selectedMonth}\r\n                        onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n                        options={[\r\n                            { value: 1, label: \"Ianuarie\" },\r\n                            { value: 2, label: \"Februarie\" },\r\n                            { value: 3, label: \"Martie\" },\r\n                            { value: 4, label: \"Aprilie\" },\r\n                            { value: 5, label: \"Mai\" },\r\n                            { value: 6, label: \"Iunie\" },\r\n                            { value: 7, label: \"Iulie\" },\r\n                            { value: 8, label: \"August\" },\r\n                            { value: 9, label: \"Septembrie\" },\r\n                            { value: 10, label: \"Octombrie\" },\r\n                            { value: 11, label: \"Noiembrie\" },\r\n                            { value: 12, label: \"Decembrie\" }\r\n                        ]}\r\n                    />\r\n                    \r\n                    <FormInput\r\n                        type=\"number\"\r\n                        label=\"An\"\r\n                        value={selectedYear}\r\n                        onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n                        min={2000}\r\n                        max={2100}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {error && (\r\n                <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n                    <p className=\"text-red-700\">{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            {loading ? (\r\n                <div className=\"text-center py-8\">Se calculează...</div>\r\n            ) : selectedDriver && (\r\n                <>\r\n                    {/* Sumar salariu */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n                            <p className=\"text-sm text-gray-500\">Salariu Bază</p>\r\n                            <p className=\"text-2xl font-bold\">{salaryData.salariuBaza} RON</p>\r\n                        </div>\r\n                        \r\n                        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n                            <p className=\"text-sm text-gray-500\">Diurnă ({salaryData.diurna.zile} zile)</p>\r\n                            <p className=\"text-2xl font-bold\">{salaryData.diurna.suma} EUR</p>\r\n                        </div>\r\n\r\n                        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n                            <p className=\"text-sm text-gray-500\">Total de Plată</p>\r\n                            <p className=\"text-2xl font-bold text-green-600\">\r\n                                {salaryData.totalPlataRON} RON + {salaryData.totalPlataEUR} EUR\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Perioade diurnă */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                        <h3 className=\"text-lg font-medium mb-4\">Perioade Diurnă</h3>\r\n                        {salaryData.diurna.perioade.map((perioada, index) => (\r\n                            <div key={index} className=\"flex justify-between border-b py-2\">\r\n                                <div>\r\n                                    <p className=\"font-medium\">\r\n                                        {formatDate(perioada.dataStart)} - {formatDate(perioada.dataFinal)}\r\n                                    </p>\r\n                                    <p className=\"text-sm text-gray-500\">\r\n                                        {calculateDays(perioada.dataStart, perioada.dataFinal)} zile - {perioada.zonaCurse}\r\n                                    </p>\r\n                                </div>\r\n                                <p className=\"font-medium\">\r\n                                    {calculateDays(perioada.dataStart, perioada.dataFinal) * (perioada.diurnaZi || 70)} EUR\r\n                                </p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Deduceri și avansuri */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                        {/* Deduceri */}\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                            <div className=\"flex justify-between items-center mb-4\">\r\n                                <h3 className=\"text-lg font-medium\">Deduceri</h3>\r\n                                <Button \r\n                                    variant=\"secondary\"\r\n                                    onClick={() => setIsDeducereModalOpen(true)}\r\n                                >\r\n                                    Adaugă Deducere\r\n                                </Button>\r\n                            </div>\r\n                            {salaryData.deduceri.map((deducere, index) => (\r\n                                <div key={index} className=\"flex justify-between border-b py-2\">\r\n                                    <div>\r\n                                        <p className=\"font-medium\">{deducere.tip}</p>\r\n                                        <p className=\"text-sm text-gray-500\">{deducere.descriere}</p>\r\n                                    </div>\r\n                                    <p className=\"font-medium text-red-600\">-{deducere.suma} RON</p>\r\n                                </div>\r\n                            ))}\r\n                            <div className=\"mt-4 pt-2 border-t\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <p className=\"font-medium\">Total Deduceri</p>\r\n                                    <p className=\"font-medium text-red-600\">\r\n                                        -{salaryData.totalDeduceri} RON\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Avansuri */}\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                            <div className=\"flex justify-between items-center mb-4\">\r\n                                <h3 className=\"text-lg font-medium\">Avansuri</h3>\r\n                                <Button \r\n                                    variant=\"secondary\"\r\n                                    onClick={() => setIsAvansModalOpen(true)}\r\n                                >\r\n                                    Adaugă Avans\r\n                                </Button>\r\n                            </div>\r\n                            {salaryData.avansuri.map((avans, index) => (\r\n                                <div key={index} className=\"flex justify-between border-b py-2\">\r\n                                    <div>\r\n                                    <p className=\"font-medium\">Avans din {formatDate(avans.data)}</p>\r\n                                        <p className=\"text-sm text-gray-500\">{avans.descriere}</p>\r\n                                    </div>\r\n                                    <p className=\"font-medium text-blue-600\">-{avans.suma} RON</p>\r\n                                </div>\r\n                            ))}\r\n                            <div className=\"mt-4 pt-2 border-t\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <p className=\"font-medium\">Total Avansuri</p>\r\n                                    <p className=\"font-medium text-blue-600\">\r\n                                        -{salaryData.totalAvansuri} RON\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Butoane acțiuni */}\r\n                    <div className=\"flex justify-end space-x-4\">\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={handleFinalizeSalary}\r\n                        >\r\n                            Finalizează Calcul\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* Modale */}\r\n                    <DeducereModal\r\n                        isOpen={isDeducereModalOpen}\r\n                        onClose={() => setIsDeducereModalOpen(false)}\r\n                        onSubmit={handleAddDeducere}\r\n                    />\r\n                    \r\n                    <AvansModal\r\n                        isOpen={isAvansModalOpen}\r\n                        onClose={() => setIsAvansModalOpen(false)}\r\n                        onSubmit={handleAddAvans}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalaryCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}